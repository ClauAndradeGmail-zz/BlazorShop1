@page "/produtos"

@inject IProdutoService produtoService

<PageTitle>Catalogo</PageTitle>

@if (Produtos == null)
{
    <ExibirSpinner/>
}
else
{
    <h3 class="mb-5">Produtos</h3>
    @if (Produtos.Count() > 0)
    {
        var produtosPorCategoria = from produto in Produtos 
                                   group produto by produto.CategoriaId into prodPorCatGrupo
                                   orderby prodPorCatGrupo.Key
                                   select prodPorCatGrupo;
        @foreach(var prodGrupo in produtosPorCategoria)
        {
            <h4>@prodGrupo.FirstOrDefault(pg => pg.CategoriaId == prodGrupo.Key).CategoriaNome</h4>
           <div class="row mt-3">
           <ExibirProdutos Produtos="@prodGrupo"></ExibirProdutos>
        </div> 
        <hr class="mb-2" />
        }
        
    }
}



@code {
    public IEnumerable<ProdutoDto>? Produtos { get; set; }
    public string? MensagemErro { get; set; }

    [Inject]
    public ICarrinhoCompraService? carrinhoCompraservice { get; set; }

    [Inject]
    public IGerenciaProdutosLocalStorageService? gerenciaProdutosLocalStorageService { get; set; }

    [Inject]
    public IGerenciaCarrinhoItensLocalStorageService? gerenciaCarrinhoItensLocalStorageService{ get; set; }

    protected override async Task OnInitializedAsync()
    {
        try
        {
            await LimpaLocalStorage();

            //Produtos = await produtoService.GetItens();
            Produtos = await gerenciaProdutosLocalStorageService.GetCollection();

            //var carrinhoCompraItens = await carrinhoCompraservice.GetItens(UsuarioLogado.UsuarioId);
            var carrinhoCompraItens = await gerenciaCarrinhoItensLocalStorageService.GetCollection();

            var totalQuantidade = carrinhoCompraItens.Sum(i => i.Quantidade);
            
            carrinhoCompraservice.RaiseEventOncarrinhoCompraChanged(totalQuantidade);
        }
        catch (Exception ex)
        {
            MensagemErro = ex.Message;
        }
       

    }

    private async Task LimpaLocalStorage()
    {
        await gerenciaProdutosLocalStorageService.RemoveCollection();
        await gerenciaCarrinhoItensLocalStorageService.RemoveCollection();
    }
}
